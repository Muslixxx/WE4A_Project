{% extends 'base.html.twig' %}

{% block title %}{{ course.name }}{% endblock %}

{% set courseImages = {
    'Mathématiques': '/images/courses/math.png',
    'Physique': '/images/courses/physique.png',
    'Chimie': '/images/courses/chimie.png',
    'Informatique': '/images/courses/informatique.png',
    'Ingénierie': '/images/courses/ingenierie.png',
    'Anglais': '/images/courses/anglais.png'
} %}

{% block body %}
    <style>
        body {
            background-color: #cceeff; /* bleu ciel léger */
        }
    </style>
    <div class="container mt-5">

        <!-- Titre et Description -->
        <div class="card mb-4" style="background-color: #64b5f6; color: #fff; overflow: hidden; padding: 2rem;">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1 style="font-size: 2.5rem;">{{ course.name }}</h1>
                    <p style="font-size: 1.2rem;">{{ course.description }}</p>
                </div>
                <div class="col-md-6 d-flex justify-content-center">
                    {% if courseImages[course.name] is defined %}
                        <img src="{{ courseImages[course.name] }}" alt="{{ course.name }}" style="width: 100%; max-width: 300px; height: auto; border-radius: 10px;">
                    {% endif %}
                </div>
            </div>
        </div>

        <!-- Contenu de l'UE -->
        <div class="card mb-4" style="background-color: #64b5f6; color: #fff;">
            <div class="card-header"><h2>Contenu de l'UE</h2></div>
            <div class="card-body">
                {% if course.contents|length > 0 %}
                    <ul>
                        {% for content in course.contents %}
                            <li>{{ content.name }} ({{ content.type }})</li>
                        {% endfor %}
                    </ul>
                {% else %}
                    <p>Aucun contenu disponible.</p>
                {% endif %}
            </div>
        </div>

        <!-- Section Posts -->
        <div class="card mb-4" style="background-color: #64b5f6; color: #ffffff; border-radius: 15px;">
            <div class="card-header d-flex justify-content-between align-items-center" style="background: transparent; border-bottom: none;">
                <h2 style="font-family: 'Luckiest Guy', cursive; color: #ff6f61;">Posts</h2>
                {% if app.user.role in ['ROLE_PROF', 'ROLE_PROF_ADMIN'] %}
                    <button class="btn btn-light" data-bs-toggle="modal" data-bs-target="#createPostModal">Créer un post ➕</button>
                {% endif %}
            </div>
            <div class="card-body">
                {% if course.posts|length > 0 %}
                    <div class="table-responsive">
                        <table class="table table-borderless" style="background-color: #39acff; border-radius: 15px; overflow: hidden;">
                            <thead style="background-color: #ffffff;">
                            <tr style="text-align: center;">
                                <th style="padding: 1rem;">Auteur</th>
                                <th style="padding: 1rem;">Titre</th>
                                <th style="padding: 1rem;">Description</th>
                                {% if app.user.role in ['ROLE_PROF', 'ROLE_PROF_ADMIN'] %}
                                    <th style="padding: 1rem;">Actions</th>
                                {% endif %}
                            </tr>
                            </thead>
                            <tbody>
                            {% for post in course.posts %}
                                <tr style="text-align: center; border-top: 2px solid #64b5f6;">
                                    <td style="padding: 1rem;">{{ post.user.firstName }} {{ post.user.lastName }}</td>
                                    <td style="padding: 1rem;">{{ post.title }}</td>
                                    <td style="padding: 1rem;">{{ post.description }}</td>
                                    {% if app.user.role in ['ROLE_PROF', 'ROLE_PROF_ADMIN'] %}
                                        <td style="padding: 1rem;">
                                            <button
                                                    class="btn btn-sm {{ post.pinned ? 'btn-danger' : 'btn-success' }} toggle-pin"
                                                    data-post-id="{{ post.id }}"
                                            >
                                                {{ post.pinned ? 'Désépingler' : 'Épingler' }}
                                            </button>
                                        </td>
                                    {% endif %}
                                </tr>
                            {% endfor %}
                            </tbody>

                        </table>
                    </div>
                {% else %}
                    <p>Aucun post pour le moment.</p>
                {% endif %}
            </div>
        </div>


        <!-- Membres de l'UE -->
        <div class="card mb-4" style="background-color: #64b5f6; color: #fff;">
            <div class="card-header" style="background: transparent; border-bottom: none;">
                <h2>Membres de l'UE</h2>
                <div class="mt-2">
                    <label for="filterRole" style="margin-right: 8px;">Trier par :</label>
                    <select id="filterRole" class="form-select" style="max-width: 200px; display: inline-block;">
                        <option value="Tous" selected>Tous</option>
                        <option value="Professeur">Professeur</option>
                        <option value="Étudiant">Étudiant</option>
                    </select>
                </div>
            </div>
            <div class="card-body">
                {% if course.members is defined and course.members|length > 0 %}
                    <div class="table-responsive">
                        <table id="membersTable" class="table text-white" style="background-color: #bbdefb; border: 2px solid #2196f3;">
                            <thead style="background-color: #90caf9;">
                            <tr>
                                <th style="border: 1px solid #2196f3;">Nom</th>
                                <th style="border: 1px solid #2196f3;">Prénom</th>
                                <th style="border: 1px solid #2196f3;">Rôle</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for member in course.members %}
                                <tr class="member-row" data-role="{{ member.role }}">
                                    <td style="border: 1px solid #2196f3;">{{ member.lastName }}</td>
                                    <td style="border: 1px solid #2196f3;">{{ member.firstName }}</td>
                                    <td style="border: 1px solid #2196f3;">{{ member.role }}</td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                {% else %}
                    <p>Aucun membre enregistré pour cette UE.</p>
                {% endif %}
            </div>
        </div>

        <!-- Modal Créer un post -->
        <div class="modal fade" id="createPostModal" tabindex="-1" aria-labelledby="createPostModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content" style="background-color: #f0f0f0;">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createPostModalLabel">Créer un post</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                    </div>
                    <div class="modal-body">
                        <form id="postForm">
                            <div class="mb-3">
                                <label for="postTitle" class="form-label">Titre du post</label>
                                <input type="text" class="form-control" id="postTitle" placeholder="Titre du post">
                            </div>
                            <div class="mb-3">
                                <label for="postText" class="form-label">Description</label>
                                <textarea class="form-control" id="postText" rows="3" placeholder="Entrez votre texte"></textarea>
                            </div>
                            <div class="mb-3">
                                <label for="contentType" class="form-label">Type</label>
                                <select class="form-select" id="contentType">
                                    <option value="text" selected>Texte</option>
                                    <option value="link">Lien</option>
                                    <option value="document">Document</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="isImportant" class="form-label">Important ?</label>
                                <select class="form-select" id="isImportant">
                                    <option value="0" selected>Non</option>
                                    <option value="1">Oui</option>
                                </select>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        <button type="button" class="btn btn-primary" id="submitPost">Poster</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const submitButton = document.getElementById('submitPost');

            if (submitButton) {
                submitButton.addEventListener('click', async () => {
                    const title = document.getElementById('postTitle').value.trim();
                    const description = document.getElementById('postText').value.trim();
                    const type = document.getElementById('contentType').value;
                    const isImportant = document.getElementById('isImportant').value;
                    const courseId = {{ course.id }};

                    if (!title || !description) {
                        alert('Merci de remplir tous les champs.');
                        return;
                    }

                    try {
                        const response = await fetch('{{ path('course_create_post', {'id': course.id}) }}', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            body: JSON.stringify({
                                title,
                                description,
                                type,
                                is_important: isImportant
                            })
                        });

                        const result = await response.json();

                        if (response.ok && result.status === 'success') {
                            alert('Post créé avec succès.');
                            document.getElementById('postForm').reset();
                            bootstrap.Modal.getInstance(document.getElementById('createPostModal')).hide();
                            location.reload();
                        } else {
                            alert('Erreur serveur : ' + (result.message || 'Erreur inconnue.'));
                        }
                    } catch (error) {
                        console.error('Erreur communication:', error);
                        alert('Erreur de communication avec le serveur.');
                    }
                });
            }
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.toggle-pin').forEach(button => {
                button.addEventListener('click', async () => {
                    const postId = button.getAttribute('data-post-id');

                    try {
                        const response = await fetch(`/course/pin-post/${postId}`, {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        });
                        const result = await response.json();

                        if (result.status === 'success') {
                            location.reload(); // Recharge la page pour voir les changements
                        } else {
                            alert('Erreur : ' + result.message);
                        }
                    } catch (error) {
                        console.error('Erreur lors de l\'épingle :', error);
                        alert('Erreur de communication avec le serveur.');
                    }
                });
            });
        });
    </script>

{% endblock %}
