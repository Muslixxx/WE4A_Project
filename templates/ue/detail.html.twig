{% extends 'base.html.twig' %}

{% block title %}{{ course.name }}{% endblock %}

{% set courseImages = {
    'Mathématiques': '/images/courses/math.png',
    'Physique': '/images/courses/physique.png',
    'Chimie': '/images/courses/chimie.png',
    'Informatique': '/images/courses/informatique.png',
    'Ingénierie': '/images/courses/ingenierie.png',
    'Anglais': '/images/courses/anglais.png'
} %}

{% block body %}
    <style>
        body {
            background-color: #cceeff; /* bleu ciel léger */
        }
    </style>
    <div class="container mt-5">

        <!-- Titre et Description -->
        <div class="card mb-4" style="background-color: #64b5f6; color: #fff; overflow: hidden; padding: 2rem;">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1 style="font-size: 2.5rem;">{{ course.name }}</h1>
                    <p style="font-size: 1.2rem;">{{ course.description }}</p>
                </div>
                <div class="col-md-6 d-flex justify-content-center">
                    {% if courseImages[course.name] is defined %}
                        <img src="{{ courseImages[course.name] }}" alt="{{ course.name }}" style="width: 100%; max-width: 300px; height: auto; border-radius: 10px;">
                    {% endif %}
                </div>
            </div>
        </div>

        <!-- Contenu de l'UE -->
        <div class="card mb-4" style="background-color: #64b5f6; color: #fff;">
            <div class="card-header"><h2>Contenu de l'UE</h2></div>
            <div class="card-body">
                {% if course.contents|length > 0 %}
                    <ul>
                        {% for content in course.contents %}
                            <li>{{ content.name }} ({{ content.type }})</li>
                        {% endfor %}
                    </ul>
                {% else %}
                    <p>Aucun contenu disponible.</p>
                {% endif %}
            </div>
        </div>

        <!-- Section Posts -->
        <div class="card mb-4" style="background-color: #64b5f6; color: #ffffff; border-radius: 15px;">
            <div class="card-header d-flex justify-content-between align-items-center" style="background: transparent; border-bottom: none;">
                <h2 style="font-family: 'Luckiest Guy', cursive; color: #ff6f61;">Posts</h2>
                {% if app.user.role in ['ROLE_PROF', 'ROLE_PROF_ADMIN'] %}
                    <button class="btn btn-light" data-bs-toggle="modal" data-bs-target="#createPostModal">Créer un post ➕</button>
                {% endif %}
            </div>
            <div class="card-body">
                {% if course.posts|length > 0 %}
                    <div class="table-responsive">
                        <table class="table table-borderless" style="background-color: #39acff; border-radius: 15px; overflow: hidden;">
                            <thead style="background-color: #ffffff;">
                            <tr style="text-align: center;">
                                <th style="padding: 1rem;">Auteur</th>
                                <th style="padding: 1rem;">Titre</th>
                                <th style="padding: 1rem;">Description</th>
                                {% if app.user.role in ['ROLE_PROF', 'ROLE_PROF_ADMIN'] %}
                                    <th style="padding: 1rem;">Actions</th>
                                {% endif %}
                            </tr>
                            </thead>
                            <tbody>
                            {% for post in course.posts %}
                                <tr style="text-align: center; border-top: 2px solid #64b5f6;">
                                    <td style="padding: 1rem;">{{ post.user.firstName }} {{ post.user.lastName }}</td>
                                    <td style="padding: 1rem;">{{ post.title }}</td>
                                    <td style="padding: 1rem;">{{ post.description }}</td>
                                    {% if app.user.role in ['ROLE_PROF', 'ROLE_PROF_ADMIN'] %}
                                        <td style="padding: 1rem;">
                                            <button
                                                    class="btn btn-sm {{ post.pinned ? 'btn-danger' : 'btn-success' }} toggle-pin"
                                                    data-post-id="{{ post.id }}"
                                            >
                                                {{ post.pinned ? 'Désépingler' : 'Épingler' }}
                                            </button>
                                        </td>
                                    {% endif %}
                                </tr>
                            {% endfor %}
                            </tbody>

                        </table>
                    </div>
                {% else %}
                    <p>Aucun post pour le moment.</p>
                {% endif %}
            </div>
        </div>


        <!-- Membres de l'UE -->
        <div class="card mb-4" style="background-color: #64b5f6; color: #fff;">
            <div class="card-header d-flex justify-content-between align-items-center" style="background: transparent; border-bottom: none;">
                <h2 style="font-family: 'Luckiest Guy', cursive;">Membres de l'UE</h2>
                <div class="d-flex align-items-center">
                    <label for="filterRole" class="me-2">Filtrer :</label>
                    <select id="filterRole" class="form-select" style="width: auto; min-width: 150px;">
                        <option value="Tous" selected>Tous</option>
                        <option value="Professeur">Professeurs</option>
                        <option value="Étudiant">Étudiants</option>
                    </select>
                </div>
            </div>
            <div class="card-body">
                {% if course.users|length > 0 %}
                    <div class="table-responsive">
                        <table id="membersTable" class="table table-borderless text-white" style="background-color: #39acff; border-radius: 15px; overflow: hidden;">
                            <thead style="background-color: #ffffff; color: #000;">
                            <tr class="text-center">
                                <th style="padding: 1rem;">Nom</th>
                                <th style="padding: 1rem;">Prénom</th>
                                <th style="padding: 1rem;">Email</th>
                                <th style="padding: 1rem;">Rôle</th>
                            </tr>
                            </thead>
                            <tbody id="membersBody">
                            {% for user in course.users %}
                                <tr class="text-center">
                                    <td style="padding: 1rem;">{{ user.lastName }}</td>
                                    <td style="padding: 1rem;">{{ user.firstName }}</td>
                                    <td style="padding: 1rem;">{{ user.email }}</td>
                                    <td style="padding: 1rem;">
                                        {% if 'ROLE_PROFESSEUR' in user.roles %}
                                            Professeur
                                        {% elseif 'ROLE_ETUDIANT' in user.roles %}
                                            Étudiant
                                        {% else %}
                                            Autre
                                        {% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                {% else %}
                    <p>Aucun membre enregistré pour cette UE.</p>
                {% endif %}
            </div>
        </div>



        <!-- Modal Créer un post -->
        <div class="modal fade" id="createPostModal" tabindex="-1" aria-labelledby="createPostModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content" style="background-color: #f0f0f0;">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createPostModalLabel">Créer un post</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                    </div>
                    <div class="modal-body">
                        <form id="postForm">
                            <div class="mb-3">
                                <label for="postTitle" class="form-label">Titre du post</label>
                                <input type="text" class="form-control" id="postTitle" placeholder="Titre du post">
                            </div>
                            <div class="mb-3" id="descriptionTextGroup">
                                <label for="postText" class="form-label">Texte du post</label>
                                <textarea class="form-control" id="postText" rows="3" placeholder="Entrez votre texte"></textarea>
                            </div>

                            <div class="mb-3 d-none" id="descriptionLinkGroup">
                                <label for="postLink" class="form-label">Lien URL</label>
                                <input type="url" class="form-control" id="postLink" placeholder="https://exemple.com">
                            </div>

                            <div class="mb-3 d-none" id="descriptionFileGroup">
                                <label for="postFile" class="form-label">Fichier</label>
                                <input type="file" class="form-control" id="postFile">
                            </div>
                            <div class="mb-3">
                                <label for="contentType" class="form-label">Type</label>
                                <select class="form-select" id="contentType">
                                    <option value="text" selected>Texte</option>
                                    <option value="link">Lien</option>
                                    <option value="document">Document</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="isImportant" class="form-label">Important ?</label>
                                <select class="form-select" id="isImportant">
                                    <option value="0" selected>Non</option>
                                    <option value="1">Oui</option>
                                </select>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                        <button type="button" class="btn btn-primary" id="submitPost">Poster</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
{% endblock %}

{% block javascripts %}
    <script>
        const createPostUrl = "{{ path('course_create_post', {'id': course.id}) }}";

        document.addEventListener('DOMContentLoaded', () => {
            const submitButton = document.getElementById('submitPost');

            if (submitButton) {
                submitButton.addEventListener('click', async () => {
                    const title = document.getElementById('postTitle').value.trim();
                    const type = document.getElementById('contentType').value;
                    const isImportant = document.getElementById('isImportant').value;

                    let description = '';

                    if (type === 'text') {
                        description = document.getElementById('postText').value.trim();
                    } else if (type === 'link') {
                        description = document.getElementById('postLink').value.trim();
                    } else if (type === 'document') {
                        const fileInput = document.getElementById('postFile');
                        if (fileInput.files.length > 0) {
                            const file = fileInput.files[0];
                            description = file.name;
                        } else {
                            alert('Merci de sélectionner un fichier.');
                            return;
                        }
                    }

                    if (!title || !description) {
                        alert('Merci de remplir tous les champs.');
                        return;
                    }

                    try {
                        const response = await fetch(createPostUrl, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            body: JSON.stringify({
                                title,
                                description,
                                type,
                                is_important: isImportant
                            })
                        });

                        const result = await response.json();

                        if (response.ok && result.status === 'success') {
                            alert('Post créé avec succès.');
                            document.getElementById('postForm').reset();
                            bootstrap.Modal.getInstance(document.getElementById('createPostModal')).hide();
                            location.reload();
                        } else {
                            alert('Erreur serveur : ' + (result.message || 'Erreur inconnue.'));
                        }
                    } catch (error) {
                        console.error('Erreur communication:', error);
                        alert('Erreur de communication avec le serveur.');
                    }
                });
            }
        });
        document.addEventListener('DOMContentLoaded', () => {
            const filterRole = document.getElementById('filterRole');
            const membersBody = document.getElementById('membersBody');

            const members = [
                {% for user in course.users %}
                {
                    lastName: "{{ user.lastName|e('js') }}",
                    firstName: "{{ user.firstName|e('js') }}",
                    email: "{{ user.email|e('js') }}",
                    role: "{{ user.role|e('js') }}"
                },
                {% endfor %}
            ];

            function formatRole(role) {
                if (role.includes('PROF')) {
                    return 'Professeur';
                } else if (role.includes('ELEVE')) {
                    return 'Élève';
                } else {
                    return 'Autre';
                }
            }

            function renderMembers(filter) {
                membersBody.innerHTML = '';

                const filtered = members.filter(member => {
                    if (filter === 'Tous') return true;
                    if (filter === 'Professeur') return member.role.includes('PROF');
                    if (filter === 'Étudiant') return member.role.includes('ELEVE');
                    return true;
                });

                if (filtered.length === 0) {
                    const row = document.createElement('tr');
                    row.innerHTML = `<td colspan="4" class="text-center p-4">Aucun membre trouvé</td>`;
                    membersBody.appendChild(row);
                    return;
                }

                filtered.forEach(member => {
                    const row = document.createElement('tr');
                    row.className = "text-center";
                    row.innerHTML = `
                <td style="padding: 1rem;">${member.lastName}</td>
                <td style="padding: 1rem;">${member.firstName}</td>
                <td style="padding: 1rem;">${member.email}</td>
                <td style="padding: 1rem;">${formatRole(member.role)}</td>
            `;
                    membersBody.appendChild(row);
                });
            }

            // *** C'est ici qu'on force "Tous" au chargement ***
            filterRole.value = 'Tous';
            renderMembers('Tous');

            filterRole.addEventListener('change', (e) => {
                renderMembers(e.target.value);
            });
        });
    </script>


{% endblock %}
