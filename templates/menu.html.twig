{% extends 'base.html.twig' %}

{% block title %}Menu Principal{% endblock %}

{% block body %}
    <style>
        /* Vos styles spécifiques aux cartes de cours sont ici */
        .custom-card {
            position: relative;
            overflow: hidden;
        }
        .custom-card .card-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .custom-card:hover .card-overlay {
            opacity: 1;
        }
    </style>

    <div class="container d-flex flex-column align-items-center" style="min-height: 100vh; gap: 1rem; padding: 2rem;">
        <!-- Section Bienvenue -->
        <div class="card w-100 bg-blue-darker" style="border-radius: 15px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);">
            <div class="card-body text-center">
                <h1 class="card-title" style="font-family: 'Luckiest Guy', cursive; font-size: 2.2rem; color: #fff; text-shadow: 2px 2px 0 #0003;">
                    Menu Principal
                </h1>
                <p class="card-text" style="font-family: 'Comic Neue', cursive; color: #fff;">
                    Bienvenue sur Moodneuille, vous êtes connecté !
                </p>
            </div>
        </div>


        <!-- Section des cours -->
        {% set courses = [
            { 'name': 'Mathématiques', 'description': 'Analyse, algèbre et géométrie avancée.' },
            { 'name': 'Physique', 'description': 'Mécanique, thermodynamique et électromagnétisme.' },
            { 'name': 'Chimie', 'description': 'Chimie organique, inorganique et analytique.' },
            { 'name': 'Informatique', 'description': 'Programmation, algorithmique et structures de données.' },
            { 'name': 'Ingénierie', 'description': 'Conception, innovation et gestion de projets.' },
            { 'name': 'Anglais', 'description': 'Grammaire, conversation et littérature.' }
        ] %}
        <div class="card w-100 bg-blue-darker" style="border-radius: 15px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);">
            <div class="card-header text-center" style="background: transparent; border-bottom: none;">
                <h2 style="font-family: 'Luckiest Guy', cursive; color: #fff;">Cours</h2>
            </div>
            <div class="card-body">
                <div class="row justify-content-center">
                    {% for course in courses %}
                        <div class="col-12 col-sm-6 col-md-4 mb-4 d-flex justify-content-center">
                            <div class="card custom-card" style="background-color: rgba(255,255,255,0.15); border: none; border-radius: 10px; width: 100%;">
                                <div class="card-content p-3 text-center">
                                    <h3 class="card-title" style="font-family: 'Luckiest Guy', cursive; color: #fff;">{{ course.name }}</h3>
                                    <p class="card-text" style="font-family: 'Comic Neue', cursive; color: #fff;">{{ course.description }}</p>
                                </div>
                                <div class="card-overlay">
                                    <a href="{{ path('cours_detail', {'id': loop.index}) }}" class="btn btn-primary">
                                        Accéder au cours
                                    </a>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>

        <!-- Section Activités récentes -->
        <div class="card w-100 bg-blue-darker" style="border-radius: 15px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);">
            <div class="card-header text-center" style="background: transparent; border-bottom: none;">
                <h2 style="font-family: 'Luckiest Guy', cursive; color: #fff;">Activités récentes</h2>
            </div>
            <div class="card-body">
                <div class="list-group">
                    {% set posts = [
                        { 'date': '2025-04-01', 'content': 'Mise à jour du cours de Mathématiques.' },
                        { 'date': '2025-03-28', 'content': 'Nouvelle ressource ajoutée au cours d\'Informatique.' },
                        { 'date': '2025-03-25', 'content': 'Correction d\'un exercice dans le cours de Physique.' }
                    ] %}
                    {% for post in posts %}
                        <div class="list-group-item" style="background-color: rgba(255,255,255,0.15); border: none; margin-bottom: 0.5rem;">
                            <small class="text-muted">{{ post.date }}</small>
                            <p class="mb-0" style="color: #fff;">{{ post.content }}</p>
                        </div>
                    {% endfor %}
                </div>
                <div class="text-center mt-3">
                    <a href="{{ path('app_activities') }}" class="btn btn-outline-light">Voir plus d'activités</a>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // Script pour déplacer le glider et mettre à jour la couleur des labels selon l'onglet sélectionné
        document.addEventListener('DOMContentLoaded', () => {
            const radios = [
                document.getElementById('radio-1'),
                document.getElementById('radio-2'),
                document.getElementById('radio-3')
            ];
            const glider = document.getElementById('glider');

            function updateGlider() {
                if (radios[0].checked) {
                    glider.style.transform = 'translateX(0%) translateY(-50%)';
                } else if (radios[1].checked) {
                    glider.style.transform = 'translateX(100%) translateY(-50%)';
                } else if (radios[2].checked) {
                    glider.style.transform = 'translateX(200%) translateY(-50%)';
                }
                const labels = document.querySelectorAll('label[for^="radio-"]');
                labels.forEach(label => {
                    const radio = document.getElementById(label.getAttribute('for'));
                    if (radio.checked) {
                        label.style.color = "#185ee0";
                        label.style.fontWeight = "700";
                        label.style.fontSize = "1rem";
                    } else {
                        label.style.color = "#000";
                        label.style.fontWeight = "500";
                        label.style.fontSize = "0.8rem";
                    }
                });
            }
            radios.forEach(radio => radio.addEventListener('change', updateGlider));
            updateGlider(); // initial
        });
    </script>
{% endblock %}
